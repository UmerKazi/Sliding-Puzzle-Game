{"ast":null,"code":"import _classCallCheck from \"/Users/umerkazi/Desktop/Year Zero Studios/SlidingPuzzleGame-Master/SlidingPuzzleGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umerkazi/Desktop/Year Zero Studios/SlidingPuzzleGame-Master/SlidingPuzzleGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umerkazi/Desktop/Year Zero Studios/SlidingPuzzleGame-Master/SlidingPuzzleGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umerkazi/Desktop/Year Zero Studios/SlidingPuzzleGame-Master/SlidingPuzzleGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umerkazi/Desktop/Year Zero Studios/SlidingPuzzleGame-Master/SlidingPuzzleGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/umerkazi/Desktop/Year Zero Studios/SlidingPuzzleGame-Master/SlidingPuzzleGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/umerkazi/Desktop/Year Zero Studios/SlidingPuzzleGame-Master/SlidingPuzzleGame/src/GameBoard.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport GameBox from \"./GameBox\";\nimport GameBoardLogic from \"./GameBoardLogic\";\n\nvar GameBoard = /*#__PURE__*/function (_Component) {\n  _inherits(GameBoard, _Component);\n\n  function GameBoard(props) {\n    var _this;\n\n    _classCallCheck(this, GameBoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GameBoard).call(this, props));\n\n    _this.initialGameState = function () {\n      _this.boardLogic = new BoardLogic(_this.props.data || _this.props.size);\n      console.log(_this.props.data);\n      console.log(_this.props.data ? _this.boardLogic.matrix : _this.boardLogic.scramble());\n      return {\n        board: _this.props.data ? _this.boardLogic.matrix : _this.boardLogic.scramble(),\n        moves: 0,\n        isWin: _this.boardLogic.checkWin()\n      };\n    };\n\n    _this.move = function (i, j) {\n      if (_this.state.isWin) return;\n\n      if (_this.boardLogic.move(i, j)) {\n        _this.props.onMove(i, j);\n\n        _this.setState(function (prevState) {\n          return {\n            board: _this.boardLogic.matrix,\n            moves: prevState.moves + 1,\n            isWin: _this.boardLogic.checkWin()\n          };\n        });\n      }\n    };\n\n    _this.getRow = function (rowData, j) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: j,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, rowData.map(function (bNum, i) {\n        return /*#__PURE__*/React.createElement(Box, {\n          key: bNum,\n          boxNumber: bNum,\n          onClick: function onClick() {\n            return _this.move(i, j);\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 43\n          }\n        });\n      }));\n    };\n\n    _this.newGame = function () {\n      _this.setState(_this.initialGameState());\n    };\n\n    _this.state = _this.initialGameState();\n    return _this;\n  }\n\n  _createClass(GameBoard, [{\n    key: \"render\",\n    value: function render() {\n      var rows = this.state.board.map(this.getRow);\n      var message = (this.state.isWin ? \"Winner !!! \" : \"Total \") + \"Moves: \".concat(this.state.moves);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slider-board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, rows, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"slider-msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, message), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn-new-game\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.newGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, \"New Game\")));\n    }\n  }]);\n\n  return GameBoard;\n}(Component);\n\nGameBoard.defaultProps = {\n  size: 3,\n  onMove: function onMove(i, j) {\n    console.log(\"Clicked tile \".concat(i, \",\").concat(j));\n  }\n};\nBoard.propTypes = {\n  data: PropTypes.array,\n  size: PropTypes.number,\n  onMove: PropTypes.func\n};\nexport default Board;","map":{"version":3,"sources":["/Users/umerkazi/Desktop/Year Zero Studios/SlidingPuzzleGame-Master/SlidingPuzzleGame/src/GameBoard.jsx"],"names":["React","Component","PropTypes","GameBox","GameBoardLogic","GameBoard","props","initialGameState","boardLogic","BoardLogic","data","size","console","log","matrix","scramble","board","moves","isWin","checkWin","move","i","j","state","onMove","setState","prevState","getRow","rowData","map","bNum","newGame","rows","message","defaultProps","Board","propTypes","array","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport GameBox from \"./GameBox\";\nimport GameBoardLogic from \"./GameBoardLogic\";\nclass GameBoard extends Component {\n    static defaultProps = {\n        size: 3,\n        onMove: (i, j) => { console.log(`Clicked tile ${i},${j}`) }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialGameState();\n    }\n\n    initialGameState = () => {\n        this.boardLogic = new BoardLogic(this.props.data || this.props.size);\n        console.log(this.props.data);\n        console.log(this.props.data ? this.boardLogic.matrix : this.boardLogic.scramble());\n        return {\n            board: this.props.data ? this.boardLogic.matrix : this.boardLogic.scramble(),\n            moves: 0,\n            isWin: this.boardLogic.checkWin()\n        }\n    };\n\n    move = (i, j) => {\n        if (this.state.isWin)\n            return;\n\n        if (this.boardLogic.move(i, j)) {\n            this.props.onMove(i, j);\n            this.setState((prevState) => ({\n                board: this.boardLogic.matrix,\n                moves: prevState.moves + 1,\n                isWin: this.boardLogic.checkWin(),\n            }));\n        }\n    }\n\n    /**\n     * @param {Object} rowData\n     * @param {Number} i\n     */\n    getRow = (rowData, j) => {\n        return (\n            <div key={j} >\n                {rowData.map((bNum, i) => <Box key={bNum} boxNumber={bNum} onClick={() => this.move(i, j)} />)}\n            </div>\n        );\n    }\n\n    newGame = () => {\n        this.setState(this.initialGameState());\n    }\n\n    render() {\n        let rows = this.state.board.map(this.getRow);\n        let message = (this.state.isWin ? \"Winner !!! \" : \"Total \") + `Moves: ${this.state.moves}`;\n        return (\n            <div className=\"slider-board\">\n                {rows}\n                <span className=\"slider-msg\">\n                    {message}\n                </span>\n                <div className=\"btn-new-game\">\n                    <button onClick={this.newGame}>New Game</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nBoard.propTypes = {\n    data: PropTypes.array,\n    size: PropTypes.number,\n    onMove: PropTypes.func\n};\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}